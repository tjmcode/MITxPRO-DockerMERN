#      Title:    MicroCODE GitHub CI/CD Action for Dockerized MERN App
#      Module:   Modules (./github/workflows)
#      Customer: Internal
#      Creator:  MicroCODE Incorporated
#      Date:     September 2022
#      Author:   Timothy J McGuire
#
#      Designed and Coded: 2022 MicroCODE Incorporated
#
#      This software and related materials are the property of
#      MicroCODE Incorporated and contain confidential and proprietary
#      information. This software and related materials shall not be
#      duplicated, disclosed to others, or used in any way without the
#      written of MicroCODE Incorported.
#
#
#      DESCRIPTION:
#      ------------
#
#      This module implements the GitHUb Actions of a MERN 3-Tier App.
#
#
#      REFERENCES:
#      -----------
#
#      1. GitHub Actions share environment variables across workflows
#         by Aj Bajada - June 23, 2021
#         https://arinco.com.au/blog/github-actions-share-environment-variables-across-workflows/#:~:text=GitHub%20Actions%20share%20environment%20variables%20across%20workflows%201,in%20your%20GitHub%20Workflow%20to%20set%20environment%20variables
#
#
#
#      MODIFICATIONS:
#      --------------
#
#  Date:         By-Group:   Rev:     Description:
#
#  27-Sep-2022   TJM-MCODE  {0001}    Updated to use .env APP_* variables...
#
#
env:
  APP_NAME: appname  # manually for now, I want this read from the Project's .env file
#
name: CI/CD Pipeline for ${{ env.APP_NAME }}
on:
  push:
    branches:
      - main
jobs:
  ci-cd:
    #  B U I L D   &   P U S H
    name: CI-CD Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14]
    steps:
      -
        name: CI-CD - CHECK-OUT CODE TO VM
        uses: actions/checkout@v3
      -
        name: CI-CD - SET-UP NODE ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      -
        name: CI-CD - SET-UP DOCKER BUILDX
        uses: docker/setup-buildx-action@v2

      -
        name: CI-CD - LOG INTO DOCKER HUB
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PERSONAL_TOKEN }}

      -
        name: CI-CD - BUILD & PUSH DATABASE TO DOCKER HUB
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./database
          file: ./database/dockerfile
          # Note: tags has to be all lower-case
          tags: tjmcode/${{ env.APP_NAME }}-database:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}
      -
        name: CI-CD - BUILD & PUSH SERVER TO DOCKER HUB
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./server
          file: ./server/dockerfile
          # Note: tags has to be all lower-case
          tags: tjmcode/${{ env.APP_NAME }}-server:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}
      -
        name: CI-CD - BUILD & PUSH CLIENT TO DOCKER HUB
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./client
          file: ./client/dockerfile
          # Note: tags has to be all lower-case
          tags: tjmcode/${{ env.APP_NAME }}-client:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}